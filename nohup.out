[uWSGI] parsing config file mysite.xml
*** Starting uWSGI 2.0.17.1 (64bit) on [Fri Dec  7 11:20:10 2018] ***
compiled with version: 5.4.0 20160609 on 07 December 2018 03:09:49
os: Linux-4.4.0-117-generic #141-Ubuntu SMP Tue Mar 13 11:58:07 UTC 2018
nodename: crux
machine: x86_64
clock source: unix
detected number of CPU cores: 1
current working directory: /usr/local/pyproject/django/mysite
detected binary path: /usr/local/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
chdir() to /usr/local/pyproject/django/mysite/
*** WARNING: you are running uWSGI without its master process manager ***
your processes number limit is 7856
your memory page size is 4096 bytes
detected max file descriptor number: 65535
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 127.0.0.1:8999 fd 3
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
Python version: 3.6.4 (default, Nov 28 2018, 16:23:58)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x1197360
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 4 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x1197360 pid: 15160 (default app)
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI worker 1 (pid: 15160, cores: 1)
spawned uWSGI worker 2 (pid: 15162, cores: 1)
spawned uWSGI worker 3 (pid: 15163, cores: 1)
spawned uWSGI worker 4 (pid: 15164, cores: 1)
[uWSGI] parsing config file mysite.xml
*** Starting uWSGI 2.0.17.1 (64bit) on [Fri Dec  7 11:21:01 2018] ***
compiled with version: 5.4.0 20160609 on 07 December 2018 03:09:49
os: Linux-4.4.0-117-generic #141-Ubuntu SMP Tue Mar 13 11:58:07 UTC 2018
nodename: crux
machine: x86_64
clock source: unix
detected number of CPU cores: 1
current working directory: /usr/local/pyproject/django/mysite
detected binary path: /usr/local/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
chdir() to /usr/local/pyproject/django/mysite/
*** WARNING: you are running uWSGI without its master process manager ***
your processes number limit is 7856
your memory page size is 4096 bytes
detected max file descriptor number: 65535
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 127.0.0.1:8999 fd 3
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
Python version: 3.6.4 (default, Nov 28 2018, 16:23:58)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0xba9360
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 4 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0xba9360 pid: 15201 (default app)
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI worker 1 (pid: 15201, cores: 1)
spawned uWSGI worker 2 (pid: 15203, cores: 1)
spawned uWSGI worker 3 (pid: 15204, cores: 1)
spawned uWSGI worker 4 (pid: 15205, cores: 1)
(0.000) SELECT @@SQL_AUTO_IS_NULL; args=None
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None
(0.000) SELECT VERSION(); args=None
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE `blog_article`.`id` = 1; args=(1,)
(0.000) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category` WHERE `blog_category`.`id` = 1; args=(1,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE (`blog_article`.`category_id` = 1 AND `blog_article`.`created_time` > '2018-12-06 01:45:07.209241') ORDER BY `blog_article`.`id` ASC LIMIT 1; args=(1, '2018-12-06 01:45:07.209241')
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE (`blog_article`.`category_id` = 1 AND `blog_article`.`created_time` < '2018-12-06 01:45:07.209241') ORDER BY `blog_article`.`id` DESC LIMIT 1; args=(1, '2018-12-06 01:45:07.209241')
(0.000) UPDATE `blog_article` SET `title` = 'django教程', `excerpt` = '这是一个django框架学习基础', `category_id` = 1, `img` = '', `body` = '<p>这是一个测试文章内容，旨在测试百度富文本插件ueditor作用</p><p><img width=\"182\" height=\"139\" src=\"http://api.map.baidu.com/staticimage?center=106.558437,29.568996&zoom=13&width=530&height=340&markers=106.558437,29.568996\" style=\"width: 182px; height: 139px;\"/></p>', `user_id` = 1, `views` = 5, `tui_id` = 1, `created_time` = '2018-12-06 01:45:07.209241', `modified_time` = '2018-12-07 03:21:08.540403' WHERE `blog_article`.`id` = 1; args=('django教程', '这是一个django框架学习基础', 1, '', '<p>这是一个测试文章内容，旨在测试百度富文本插件ueditor作用</p><p><img width="182" height="139" src="http://api.map.baidu.com/staticimage?center=106.558437,29.568996&zoom=13&width=530&height=340&markers=106.558437,29.568996" style="width: 182px; height: 139px;"/></p>', 1, 5, 1, '2018-12-06 01:45:07.209241', '2018-12-07 03:21:08.540403', 1)
(0.001) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category`; args=()
(0.001) SELECT `blog_tags`.`id`, `blog_tags`.`name` FROM `blog_tags` INNER JOIN `blog_article_tags` ON (`blog_tags`.`id` = `blog_article_tags`.`tags_id`) WHERE `blog_article_tags`.`article_id` = 1; args=(1,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` ORDER BY RAND() ASC LIMIT 10; args=()
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE `blog_article`.`tui_id` = 2 LIMIT 6; args=(2,)
(0.000) SELECT `blog_tags`.`id`, `blog_tags`.`name` FROM `blog_tags`; args=()
[pid: 15201|app: 0|req: 1/1] 222.178.230.90 () {50 vars in 988 bytes} [Fri Dec  7 11:21:08 2018] GET /show-1.html => generated 9828 bytes in 93 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
(0.000) SELECT @@SQL_AUTO_IS_NULL; args=None
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None
(0.000) SELECT VERSION(); args=None
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE `blog_article`.`id` = 1; args=(1,)
(0.001) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category` WHERE `blog_category`.`id` = 1; args=(1,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE (`blog_article`.`category_id` = 1 AND `blog_article`.`created_time` > '2018-12-06 01:45:07.209241') ORDER BY `blog_article`.`id` ASC LIMIT 1; args=(1, '2018-12-06 01:45:07.209241')
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE (`blog_article`.`category_id` = 1 AND `blog_article`.`created_time` < '2018-12-06 01:45:07.209241') ORDER BY `blog_article`.`id` DESC LIMIT 1; args=(1, '2018-12-06 01:45:07.209241')
(0.000) UPDATE `blog_article` SET `title` = 'django教程', `excerpt` = '这是一个django框架学习基础', `category_id` = 1, `img` = '', `body` = '<p>这是一个测试文章内容，旨在测试百度富文本插件ueditor作用</p><p><img width=\"182\" height=\"139\" src=\"http://api.map.baidu.com/staticimage?center=106.558437,29.568996&zoom=13&width=530&height=340&markers=106.558437,29.568996\" style=\"width: 182px; height: 139px;\"/></p>', `user_id` = 1, `views` = 6, `tui_id` = 1, `created_time` = '2018-12-06 01:45:07.209241', `modified_time` = '2018-12-07 03:21:14.773824' WHERE `blog_article`.`id` = 1; args=('django教程', '这是一个django框架学习基础', 1, '', '<p>这是一个测试文章内容，旨在测试百度富文本插件ueditor作用</p><p><img width="182" height="139" src="http://api.map.baidu.com/staticimage?center=106.558437,29.568996&zoom=13&width=530&height=340&markers=106.558437,29.568996" style="width: 182px; height: 139px;"/></p>', 1, 6, 1, '2018-12-06 01:45:07.209241', '2018-12-07 03:21:14.773824', 1)
(0.001) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category`; args=()
(0.001) SELECT `blog_tags`.`id`, `blog_tags`.`name` FROM `blog_tags` INNER JOIN `blog_article_tags` ON (`blog_tags`.`id` = `blog_article_tags`.`tags_id`) WHERE `blog_article_tags`.`article_id` = 1; args=(1,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` ORDER BY RAND() ASC LIMIT 10; args=()
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE `blog_article`.`tui_id` = 2 LIMIT 6; args=(2,)
(0.000) SELECT `blog_tags`.`id`, `blog_tags`.`name` FROM `blog_tags`; args=()
[pid: 15203|app: 0|req: 1/2] 222.178.230.90 () {50 vars in 988 bytes} [Fri Dec  7 11:21:14 2018] GET /show-1.html => generated 9828 bytes in 113 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
[uWSGI] parsing config file mysite.xml
*** Starting uWSGI 2.0.17.1 (64bit) on [Fri Dec  7 11:23:28 2018] ***
compiled with version: 5.4.0 20160609 on 07 December 2018 03:09:49
os: Linux-4.4.0-117-generic #141-Ubuntu SMP Tue Mar 13 11:58:07 UTC 2018
nodename: crux
machine: x86_64
clock source: unix
detected number of CPU cores: 1
current working directory: /usr/local/pyproject/django/mysite
detected binary path: /usr/local/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
chdir() to /usr/local/pyproject/django/mysite/
*** WARNING: you are running uWSGI without its master process manager ***
your processes number limit is 7856
your memory page size is 4096 bytes
detected max file descriptor number: 65535
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 127.0.0.1:8999 fd 3
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
Python version: 3.6.4 (default, Nov 28 2018, 16:23:58)  [GCC 5.4.0 20160609]
*** Python threads support is disabled. You can enable it with --enable-threads ***
Python main interpreter initialized at 0x18ec360
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 291680 bytes (284 KB) for 4 cores
*** Operational MODE: preforking ***
WSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x18ec360 pid: 15261 (default app)
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI worker 1 (pid: 15261, cores: 1)
spawned uWSGI worker 2 (pid: 15264, cores: 1)
spawned uWSGI worker 3 (pid: 15265, cores: 1)
spawned uWSGI worker 4 (pid: 15266, cores: 1)
(0.000) SELECT @@SQL_AUTO_IS_NULL; args=None
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None
(0.001) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category`; args=()
(0.000) SELECT VERSION(); args=None
(0.001) SELECT `blog_banner`.`id`, `blog_banner`.`text_info`, `blog_banner`.`img`, `blog_banner`.`link_url`, `blog_banner`.`is_active` FROM `blog_banner` WHERE `blog_banner`.`is_active` = 1 LIMIT 4; args=(True,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE `blog_article`.`tui_id` = 1 LIMIT 3; args=(1,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` ORDER BY `blog_article`.`id` DESC LIMIT 10; args=()
(0.000) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category` WHERE `blog_category`.`id` = 1; args=(1,)
(0.001) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category` WHERE `blog_category`.`id` = 1; args=(1,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` ORDER BY `blog_article`.`views` ASC LIMIT 10; args=()
(0.000) SELECT `blog_link`.`id`, `blog_link`.`name`, `blog_link`.`link_url` FROM `blog_link`; args=()
[pid: 15261|app: 0|req: 1/1] 222.178.230.90 () {46 vars in 893 bytes} [Fri Dec  7 11:23:39 2018] GET / => generated 17001 bytes in 104 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /favicon.ico
[pid: 15264|app: 0|req: 1/2] 222.178.230.90 () {46 vars in 876 bytes} [Fri Dec  7 11:23:39 2018] GET /favicon.ico => generated 3046 bytes in 27 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
(0.000) SELECT @@SQL_AUTO_IS_NULL; args=None
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None
(0.000) SELECT VERSION(); args=None
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE `blog_article`.`id` = 2; args=(2,)
(0.001) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category` WHERE `blog_category`.`id` = 1; args=(1,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE (`blog_article`.`category_id` = 1 AND `blog_article`.`created_time` > '2018-12-06 01:52:30.841646') ORDER BY `blog_article`.`id` ASC LIMIT 1; args=(1, '2018-12-06 01:52:30.841646')
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE (`blog_article`.`category_id` = 1 AND `blog_article`.`created_time` < '2018-12-06 01:52:30.841646') ORDER BY `blog_article`.`id` DESC LIMIT 1; args=(1, '2018-12-06 01:52:30.841646')
(0.000) UPDATE `blog_article` SET `title` = 'python学习教程', `excerpt` = '通过学习获取资金', `category_id` = 1, `img` = '', `body` = '<p>测试电脑电脑联机应用</p>', `user_id` = 1, `views` = 6, `tui_id` = NULL, `created_time` = '2018-12-06 01:52:30.841646', `modified_time` = '2018-12-07 03:23:54.051323' WHERE `blog_article`.`id` = 2; args=('python学习教程', '通过学习获取资金', 1, '', '<p>测试电脑电脑联机应用</p>', 1, 6, '2018-12-06 01:52:30.841646', '2018-12-07 03:23:54.051323', 2)
(0.001) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category`; args=()
(0.001) SELECT `blog_tags`.`id`, `blog_tags`.`name` FROM `blog_tags` INNER JOIN `blog_article_tags` ON (`blog_tags`.`id` = `blog_article_tags`.`tags_id`) WHERE `blog_article_tags`.`article_id` = 2; args=(2,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` ORDER BY RAND() ASC LIMIT 10; args=()
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE `blog_article`.`tui_id` = 2 LIMIT 6; args=(2,)
(0.000) SELECT `blog_tags`.`id`, `blog_tags`.`name` FROM `blog_tags`; args=()
[pid: 15266|app: 0|req: 1/3] 222.178.230.90 () {48 vars in 957 bytes} [Fri Dec  7 11:23:54 2018] GET /show-2.html => generated 9224 bytes in 104 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
(0.000) SELECT @@SQL_AUTO_IS_NULL; args=None
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None
(0.000) SELECT VERSION(); args=None
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE `blog_article`.`id` = 1; args=(1,)
(0.001) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category` WHERE `blog_category`.`id` = 1; args=(1,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE (`blog_article`.`category_id` = 1 AND `blog_article`.`created_time` > '2018-12-06 01:45:07.209241') ORDER BY `blog_article`.`id` ASC LIMIT 1; args=(1, '2018-12-06 01:45:07.209241')
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE (`blog_article`.`category_id` = 1 AND `blog_article`.`created_time` < '2018-12-06 01:45:07.209241') ORDER BY `blog_article`.`id` DESC LIMIT 1; args=(1, '2018-12-06 01:45:07.209241')
(0.001) UPDATE `blog_article` SET `title` = 'django教程', `excerpt` = '这是一个django框架学习基础', `category_id` = 1, `img` = '', `body` = '<p>这是一个测试文章内容，旨在测试百度富文本插件ueditor作用</p><p><img width=\"182\" height=\"139\" src=\"http://api.map.baidu.com/staticimage?center=106.558437,29.568996&zoom=13&width=530&height=340&markers=106.558437,29.568996\" style=\"width: 182px; height: 139px;\"/></p>', `user_id` = 1, `views` = 7, `tui_id` = 1, `created_time` = '2018-12-06 01:45:07.209241', `modified_time` = '2018-12-07 03:24:16.449505' WHERE `blog_article`.`id` = 1; args=('django教程', '这是一个django框架学习基础', 1, '', '<p>这是一个测试文章内容，旨在测试百度富文本插件ueditor作用</p><p><img width="182" height="139" src="http://api.map.baidu.com/staticimage?center=106.558437,29.568996&zoom=13&width=530&height=340&markers=106.558437,29.568996" style="width: 182px; height: 139px;"/></p>', 1, 7, 1, '2018-12-06 01:45:07.209241', '2018-12-07 03:24:16.449505', 1)
(0.001) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category`; args=()
(0.001) SELECT `blog_tags`.`id`, `blog_tags`.`name` FROM `blog_tags` INNER JOIN `blog_article_tags` ON (`blog_tags`.`id` = `blog_article_tags`.`tags_id`) WHERE `blog_article_tags`.`article_id` = 1; args=(1,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` ORDER BY RAND() ASC LIMIT 10; args=()
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE `blog_article`.`tui_id` = 2 LIMIT 6; args=(2,)
(0.000) SELECT `blog_tags`.`id`, `blog_tags`.`name` FROM `blog_tags`; args=()
[pid: 15264|app: 0|req: 2/4] 222.178.230.90 () {48 vars in 957 bytes} [Fri Dec  7 11:24:16 2018] GET /show-1.html => generated 9828 bytes in 87 msecs (HTTP/1.1 200) 3 headers in 110 bytes (1 switches on core 0)
Internal Server Error: /about/
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/usr/local/lib/python3.6/site-packages/django/core/handlers/base.py", line 139, in _get_response
    "returned None instead." % (callback.__module__, view_name)
ValueError: The view blog.views.about didn't return an HttpResponse object. It returned None instead.
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None
(0.001) SELECT `django_session`.`session_key`, `django_session`.`session_data`, `django_session`.`expire_date` FROM `django_session` WHERE (`django_session`.`expire_date` > '2018-12-07 03:24:47.826744' AND `django_session`.`session_key` = 'etc47gqdjh98nuq7zt76wmemvxzwx64c'); args=('2018-12-07 03:24:47.826744', 'etc47gqdjh98nuq7zt76wmemvxzwx64c')
(0.001) SELECT `auth_user`.`id`, `auth_user`.`password`, `auth_user`.`last_login`, `auth_user`.`is_superuser`, `auth_user`.`username`, `auth_user`.`first_name`, `auth_user`.`last_name`, `auth_user`.`email`, `auth_user`.`is_staff`, `auth_user`.`is_active`, `auth_user`.`date_joined` FROM `auth_user` WHERE `auth_user`.`id` = 1; args=(1,)
[pid: 15266|app: 0|req: 2/5] 222.178.230.90 () {48 vars in 947 bytes} [Fri Dec  7 11:24:47 2018] GET /about/ => generated 50111 bytes in 76 msecs (HTTP/1.1 500) 4 headers in 129 bytes (1 switches on core 0)
(0.000) SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED; args=None
(0.001) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category`; args=()
(0.001) SELECT `blog_banner`.`id`, `blog_banner`.`text_info`, `blog_banner`.`img`, `blog_banner`.`link_url`, `blog_banner`.`is_active` FROM `blog_banner` WHERE `blog_banner`.`is_active` = 1 LIMIT 4; args=(True,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` WHERE `blog_article`.`tui_id` = 1 LIMIT 3; args=(1,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` ORDER BY `blog_article`.`id` DESC LIMIT 10; args=()
(0.000) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category` WHERE `blog_category`.`id` = 1; args=(1,)
(0.001) SELECT `blog_category`.`id`, `blog_category`.`name`, `blog_category`.`index` FROM `blog_category` WHERE `blog_category`.`id` = 1; args=(1,)
(0.001) SELECT `blog_article`.`id`, `blog_article`.`title`, `blog_article`.`excerpt`, `blog_article`.`category_id`, `blog_article`.`img`, `blog_article`.`body`, `blog_article`.`user_id`, `blog_article`.`views`, `blog_article`.`tui_id`, `blog_article`.`created_time`, `blog_article`.`modified_time` FROM `blog_article` ORDER BY `blog_article`.`views` ASC LIMIT 10; args=()
(0.000) SELECT `blog_link`.`id`, `blog_link`.`name`, `blog_link`.`link_url` FROM `blog_link`; args=()
[pid: 15264|app: 0|req: 3/6] 222.178.230.90 () {48 vars in 935 bytes} [Fri Dec  7 11:24:50 2018] GET / => generated 17001 bytes in 45 msecs (HTTP/1.1 200) 3 headers in 111 bytes (1 switches on core 0)
Not Found: /cache/global/img/gs.gif
[pid: 15266|app: 0|req: 3/7] 80.82.78.50 () {36 vars in 506 bytes} [Fri Dec  7 11:59:25 2018] GET /cache/global/img/gs.gif => generated 3077 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
